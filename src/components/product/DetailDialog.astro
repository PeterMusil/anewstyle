---
import Icon from "../icons/Icon.astro";
interface Props {
  id: number;
  title?: string;
  desc?: string;
  descEn?: string;
  imgDark?: string;
  imgFrame?: string;
  imgLight?: string;
  modelHorizontal3d?: string;
  modelVertical3d?: string;
  daeFile?: string;
  content?: string;
  price?: number;
  reservation: boolean;
}
const { id, title, desc, descEn, content, price, imgDark, imgFrame, imgLight, modelHorizontal3d, modelVertical3d, daeFile, reservation } = Astro.props;
---

<dialog id={`myDialog${id}`} class="dialog">
  <button type="button" id="closeBtn" class="dialog__close" aria-label="Close product detail" title="Close">
    <Icon name="close" />
  </button>
  <div class="product-detail">
    <strong>{title}</strong>
    <div class="product-detail__img" title="Show in 3D">
      <a href={`#horizontal3dModel${id}`} aria-label="Kámen jako osvětlení interiéru" data-fancybox={`product${id}`}>
        <img src={`./images/products/${imgLight}`} alt={`Kamenná deska ${title}`} width="1024" id="closeImg" />
        {(modelHorizontal3d || modelVertical3d) && <Icon name="ar" />}
      </a>
    </div>
    <div class="product-detail__hidden">
      <a href={`#vertical3dModel${id}`} aria-label="Kámen jako osvětlení interiéru" data-fancybox={`product${id}`}></a>
      <a href={`./images/products/${imgDark}`} aria-label="Kámen jako osvětlení interiéru" data-fancybox={`product${id}`}></a>
      <a href={`./images/products/${imgFrame}`} aria-label="Kámen jako osvětlení interiéru" data-fancybox={`product${id}`}></a>
      <a href={`./images/products/${imgLight}`} aria-label="Kámen jako osvětlení interiéru" data-fancybox={`product${id}`}></a>
      <model-viewer id={`horizontal3dModel${id}`} src={`./3d/products/${modelHorizontal3d}`} ar ar-scale="auto" ar-modes="webxr scene-viewer quick-look" camera-controls touch-action="pan-y" camera-orbit="0deg 90deg 2.5m"></model-viewer>
      <model-viewer id={`vertical3dModel${id}`} src={`./3d/products/${modelVertical3d}`} ar ar-scale="auto" ar-modes="webxr scene-viewer quick-look" camera-controls touch-action="pan-y" camera-orbit="0deg 90deg 2.5m"></model-viewer>
    </div>
    <div class="product-detail__content">
      <p class="desc desc--no-mg" data-language="cs">{desc}</p>
      <p class="desc desc--no-mg" data-language="en">{descEn}</p>
      <div class="tags" set:html={content} />
      {
        daeFile && (
          <a href={`./downloads/dae/${daeFile}`} target="_blank" class="link link--light link--uppercase">
            <Icon name="download" />
            <span data-localize="products_detail_download" />
          </a>
        )
      }
      <div class="product-detail__footer">
        {
          price && (
            <>
              <span class="product-detail__price">
                <strong>
                  {price.toLocaleString("cs-CZ")}
                  <strong data-localize="products_detail_currency" />
                </strong>

                <small data-localize="products_detail_vat" />
              </span>
              <a class="button button--s" href="mailto:info@anewstyle.cz" aria-disabled={reservation}>
                {reservation ? (
                  "Rezervováno"
                ) : (
                  <>
                    <span data-localize="products_detail_btn_interested" />
                    <Icon name="email" />
                  </>
                )}
              </a>
            </>
          )
        }
      </div>
    </div>
  </div>

  <script>
    const products = document.querySelectorAll(".product");
    const body = document.querySelector("body");
    products.forEach((product) => {
      const productCard = product.querySelector('div[role="button"]') as HTMLButtonElement;
      const productDetail = product.querySelector("dialog") as HTMLDialogElement;
      const closeBtn = productDetail.querySelector("#closeBtn") as HTMLButtonElement;
      const closeImg = productDetail.querySelector("#closeImg") as HTMLButtonElement;

      productCard.addEventListener("click", () => {
        productDetail.showModal();
        body?.style.setProperty("overflow", "hidden");

        if (!document.querySelector('script[src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"]')) {
          const script = document.createElement("script");
          script.type = "module";
          script.src = "https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js";

          document.body.appendChild(script);
        }
      });

      closeBtn.addEventListener("click", (e) => {
        e.stopPropagation();
        productDetail.close();
        body?.style.setProperty("overflow", "initial");
      });

      closeImg.addEventListener("click", () => {
        productDetail.close();
        body?.style.setProperty("overflow", "initial");
      });

      const tags = productDetail.querySelector(".tags") as HTMLDivElement;
      const ulElement = tags.querySelector("ul") as HTMLUListElement;
      const liElement = document.createElement("li");
      const showMoreBtn = document.createElement("button");

      showMoreBtn.classList.add("button", "button--xs");
      showMoreBtn.setAttribute("type", "button");

      const spanMore = document.createElement("span");
      spanMore.setAttribute("data-localize", "products_detail_btn_more");
      showMoreBtn.appendChild(spanMore);

      const spanLess = document.createElement("span");
      spanLess.setAttribute("data-localize", "products_detail_btn_less");
      spanLess.style.display = "none";
      showMoreBtn.appendChild(spanLess);

      showMoreBtn?.addEventListener("click", () => {
        tags?.classList.toggle("tags--all");
        spanMore.style.display = tags.classList.contains("tags--all") ? "none" : "inline";
        spanLess.style.display = tags.classList.contains("tags--all") ? "inline" : "none";
      });

      liElement.appendChild(showMoreBtn);
      ulElement.appendChild(liElement);
    });
  </script>
</dialog>
