---
import PriceItem from "../priceItem/PriceItem.astro";
import prices from "../../data/prices.json";
import type { PricesData, Product, Price } from "../priceItem/PriceItem.types";
import PriceListFeatures from "../priceListFeatures/PriceListFeatures.astro";

const { id } = Astro.props;
const selectedSize: keyof Price = "l";
const products: (Product & { price: string })[] = (
  prices as PricesData
).products.map((product) => ({
  ...product,
  price: product.prices[selectedSize],
}));
---

<section id={id} class="dark price-list">
  <div class="container">
    <h2 class="title title--white text-center" data-localize="price_title"></h2>
    <div class="price-list__container">
    <PriceListFeatures />
      <div id="priceItems" class="price-list__items">
        
        {products.map((product) => (
          <PriceItem
            id={product.id}
            title={product.title}
            price={product.price}
            features={product.features}
          />
        ))}
      </div>
      <div class="price-list__selection">
      <label>
        Zvolte velikost
        <select name="products" id="productSelect">
          <option value="l">L (2444 x 404 mm)</option>
          <option value="xl">XL (2444 x 804 mm)</option>
          <option value="xxl">XXL (2444 x 604 mm)</option>
          <option value="xxxl">XXXL (2444 x 404 mm)</option>
        </select>
      </label>
      <div class="price-list__preview">
        <img src="https://picsum.photos/288/776" width="288px" height="776px" alt="placeholder">
      </div>
      </div>
    </div>
  </div>
</section>

<script>
  import prices from "../../data/prices.json";
  import type {
    PricesData,
    Product,
    Price,
  } from "../priceItem/PriceItem.types";

  const productSelect = document.getElementById("productSelect");

  if (productSelect) {
    productSelect.addEventListener("change", (event) => {
      const selectedSize: keyof Price = (event.target as HTMLSelectElement)
        .value as keyof Price;
      const updatedProducts: (Product & { price: string })[] = (
        prices as PricesData
      ).products.map((product) => ({
        ...product,
        price: product.prices[selectedSize],
      }));

      updatedProducts.forEach((product) => {
        const priceElement = document.querySelector(`#price-${product.id}`);
        if (priceElement) {
          priceElement.textContent = product.price;
        }
      });
    });
  }
</script>